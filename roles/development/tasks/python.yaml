- name: Install Python 3.13 (global default) via Mise
  ansible.builtin.command:
    cmd: mise use -g python@3.13
    creates: "{{ ansible_facts.user_dir }}/\
      .local/share/mise/installs/python/3.13/bin/python3"

- name: Install Python 3.12 via Mise
  ansible.builtin.command:
    cmd: mise install python@3.12
    creates: "{{ ansible_facts.user_dir }}/\
      .local/share/mise/installs/python/3.12/bin/python3"

- name: Require Pip to use a Virtual Environment
  ansible.builtin.command:
    argv:
      - mise
      - set
      - --global
      - PIP_REQUIRE_VIRTUALENV=true
  changed_when: '"PIP_REQUIRE_VIRTUALENV" not in ansible_env'

- name: UV
  block:
    - name: Download UV
      ansible.builtin.get_url:
        url:
          https://github.com/astral-sh/uv/releases/latest/download/uv-x86_64-unknown-linux-gnu.tar.gz
        checksum:
          sha256:https://github.com/astral-sh/uv/releases/latest/download/uv-x86_64-unknown-linux-gnu.tar.gz.sha256
        dest: /tmp/
        mode: u=rw,g=rw,o=rw
      register: uv_data
    - name: Unpack UV
      ansible.builtin.unarchive:
        src: /tmp/uv-x86_64-unknown-linux-gnu.tar.gz
        dest: "{{ ansible_facts.user_dir }}/.local/bin/"
        extra_opts:
          - --strip-components=1
    - name: Get UV Fish Completions
      ansible.builtin.command:
        argv:
          - uv
          - generate-shell-completion
          - fish
        creates: "{{ ansible_facts.user_dir }}/.config/fish/completions/uv.fish"
      register: fish_completions_uv
    - name: Write UV Fish Completions # noqa: no-handler
      ansible.builtin.copy:
        content: "{{ fish_completions_uv.stdout }}"
        dest: "{{ ansible_facts.user_dir }}/.config/fish/completions/uv.fish"
        mode: u=rw,g=rw,o=rw
        force: false
    - name: Configure Mise to use UV (experimental)
      loop:
        - experimental=true
        - python.uv_venv_auto=true
      ansible.builtin.command:
        argv:
          - mise
          - settings
          - "{{ item }}"
      changed_when: true

- name: Ruff
  block:
    - name: Install Ruff
      ansible.builtin.command:
        argv:
          - uv
          - tool
          - install
          - ruff@latest
        creates: "{{ ansible_facts.user_dir }}/.local/bin/ruff"

    - name: Ruff Config
      ansible.builtin.copy:
        src: .ruff.toml
        dest: "{{ ansible_facts.user_dir }}/.ruff.toml"
        owner: "{{ ansible_facts.user_uid }}"
        group: "{{ ansible_facts.user_gid }}"
        mode: u=rw,g=r,o=r

- name: Install ptpython
  ansible.builtin.command:
    argv:
      - uv
      - tool
      - install
      - ptpython@latest
    creates: "{{ ansible_facts.user_dir }}/.local/bin/"
